// === C·∫•u h√¨nh voucher === 
const vouchers = [                                              // Danh s√°ch m√£ gi·∫£m gi√° v√† m·ª©c gi·∫£m
  { code: 'DISCOUNT10', discount: 0.10 },                       // Gi·∫£m 10%
  { code: 'DISCOUNT20', discount: 0.20 },                       // Gi·∫£m 20%
  { code: 'FREESHIP',  discount: 0.05 },                        // Gi·∫£m 5% (v√≠ d·ª• freeship)
  { code: 'DISCOUNT 25', discount: 0.25 },                      // Gi·∫£m 25%
  { code: 'DISCOUNT 30', discount: 0.30 }                       // Gi·∫£m 30%
];

let cart = [];                                                  // M·∫£ng l∆∞u th√¥ng tin s·∫£n ph·∫©m trong gi·ªè
let selectedVoucher = null;                                     // M√£ gi·∫£m gi√° ƒëang ƒë∆∞·ª£c ch·ªçn
const CART_KEY = 'cart';                                        // Kh√≥a ƒë·ªÉ l∆∞u v√†o localStorage

function saveCart() {                                           // L∆∞u gi·ªè h√†ng v√†o localStorage
  localStorage.setItem(CART_KEY, JSON.stringify(cart));         // Chuy·ªÉn m·∫£ng cart th√†nh chu·ªói
}

document.addEventListener('DOMContentLoaded', initCartUI);      // Khi trang t·∫£i xong th√¨ kh·ªüi t·∫°o UI

function initCartUI() {
  const buyNowBtn      = document.getElementById('buyNowBtn');      // N√∫t mua th√™m
  const checkoutBtn    = document.getElementById('checkoutBtn');    // N√∫t thanh to√°n
  const openVoucherBtn = document.getElementById('openVoucherBtn'); // N√∫t m·ªü modal m√£ gi·∫£m gi√°
  const voucherModal   = document.getElementById('voucherModal');   // Modal ch·ªçn m√£ gi·∫£m gi√°
  const modalBackdrop  = document.getElementById('modalBackdrop');  // N·ªÅn m·ªù ƒë·∫±ng sau modal
  const closeVoucherBtn  = document.getElementById('closeVoucherBtn');  // N√∫t ƒë√≥ng modal
  const cancelVoucherBtn = document.getElementById('cancelVoucherBtn'); // N√∫t h·ªßy
  const applyVoucherBtn  = document.getElementById('applyVoucherBtn');  // N√∫t √°p d·ª•ng m√£

  cart = JSON.parse(localStorage.getItem(CART_KEY)) || [];         // L·∫•y d·ªØ li·ªáu gi·ªè t·ª´ localStorage

  buyNowBtn.addEventListener('click', () => {                      // N·∫øu b·∫•m "Buy Now"
    window.location.href = 'home.html';                            // Chuy·ªÉn v·ªÅ trang mua h√†ng
  });

  checkoutBtn.addEventListener('click', () => {                    // Khi ng∆∞·ªùi d√πng b·∫•m thanh to√°n
    if (cart.length === 0) {
      window.location.href = 'home.html';                          // N·∫øu gi·ªè tr·ªëng ‚Üí chuy·ªÉn v·ªÅ trang ch√≠nh
      return;
    }

    const addressInput = document.getElementById('shippingAddress'); // L·∫•y input ƒë·ªãa ch·ªâ giao h√†ng
    const address = addressInput.value.trim();                     // B·ªè kho·∫£ng tr·∫Øng 2 ƒë·∫ßu
    if (!address) {
      alert('Please enter a shipping address.');                   // Th√¥ng b√°o n·∫øu thi·∫øu ƒë·ªãa ch·ªâ
      return;
    }

    const itemList = cart                                          // T·∫°o danh s√°ch s·∫£n ph·∫©m trong gi·ªè
      .map(i => `${i.title} x${i.qty} ($${(i.price * i.qty).toFixed(2)})`)
      .join('\n');

    const rawTotal = cart.reduce((sum, i) => sum + i.qty * i.price, 0); // T·ªïng ch∆∞a gi·∫£m gi√°
    const finalTotal = selectedVoucher                              // √Åp d·ª•ng m√£ gi·∫£m n·∫øu c√≥
      ? (rawTotal * (1 - selectedVoucher.discount)).toFixed(2)
      : rawTotal.toFixed(2);

    alert(                                                           // Th√¥ng b√°o th√†nh c√¥ng
      `üéâ Payment Successful! üéâ\n\n` +
      `Order Details:\n${itemList}\n\n` +
      `Total Paid: $${finalTotal}\n` +
      `Shipping to: ${address}`
    );

    cart = [];                                                       // Reset gi·ªè h√†ng
    saveCart();                                                      // L∆∞u l·∫°i gi·ªè h√†ng tr·ªëng
    selectedVoucher = null;                                          // X√≥a m√£ gi·∫£m gi√°
    document.getElementById('voucherInfo').classList.add('hidden');  // ·∫®n th√¥ng tin m√£ gi·∫£m gi√°
    addressInput.value = '';                                         // X√≥a ƒë·ªãa ch·ªâ
    renderCart();                                                    // V·∫Ω l·∫°i gi·ªè h√†ng
  });

  openVoucherBtn.addEventListener('click', () => {              // Khi m·ªü ch·ªçn m√£ gi·∫£m gi√°
    voucherModal.classList.remove('hidden');                    // Hi·ªán modal
    renderVouchers();                                           // Hi·ªán danh s√°ch m√£
  });

  [modalBackdrop, closeVoucherBtn, cancelVoucherBtn].forEach(el =>
    el.addEventListener('click', () => voucherModal.classList.add('hidden')) // ƒê√≥ng modal khi click ra ngo√†i
  );

  applyVoucherBtn.addEventListener('click', () => {             // Khi b·∫•m n√∫t √°p d·ª•ng m√£
    const sel = document.querySelector('input[name=voucher]:checked'); // T√¨m m√£ ƒë∆∞·ª£c ch·ªçn
    if (!sel) return;
    selectedVoucher = vouchers[parseInt(sel.value, 10)];        // L·∫•y th√¥ng tin m√£ t·ª´ m·∫£ng
    voucherModal.classList.add('hidden');                       // ·∫®n modal
    updateSummary();                                            // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
    saveCart();                                                 // L∆∞u l·∫°i
  });

  renderCart();                                                 // Hi·ªán gi·ªè h√†ng ban ƒë·∫ßu
}

function renderCart() {
  const cartItemsEl = document.getElementById('cartItems');     // Element ch·ª©a danh s√°ch s·∫£n ph·∫©m
  cartItemsEl.innerHTML = '';                                   // X√≥a n·ªôi dung c≈©

  if (cart.length === 0) {
    document.getElementById('emptyCartPage').classList.remove('hidden'); // N·∫øu tr·ªëng th√¨ hi·ªÉn th·ªã giao di·ªán tr·ªëng
    document.getElementById('cartPage').classList.add('hidden');         // ·∫®n ph·∫ßn chi ti·∫øt gi·ªè
    return;
  }

  document.getElementById('emptyCartPage').classList.add('hidden');
  document.getElementById('cartPage').classList.remove('hidden');

  cart.forEach(item => {
    const row = document.createElement('div');                  // T·∫°o d√≤ng hi·ªÉn th·ªã
    row.className = 'cart-item';
    row.innerHTML = `
      <div>${item.title}</div>
      <div>
        <input type="number" min="1" value="${item.qty}" data-id="${item.id}"> x $${item.price.toFixed(2)}
      </div>
      <button class="btn" data-remove="${item.id}">Remove</button>
    `;

    row.querySelector('input').addEventListener('change', e => { // X·ª≠ l√Ω khi thay ƒë·ªïi s·ªë l∆∞·ª£ng
      const val = parseInt(e.target.value, 10);
      if (val < 1) return;
      item.qty = val;
      updateSummary();                                           // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
      saveCart();                                                // L∆∞u l·∫°i
    });

    row.querySelector('[data-remove]').addEventListener('click', () => { // X·ª≠ l√Ω khi b·∫•m "Remove"
      cart = cart.filter(ci => ci.id !== item.id);
      saveCart();
      renderCart();                                              // render l·∫°i
    });

    cartItemsEl.appendChild(row);                                // Th√™m d√≤ng v√†o giao di·ªán
  });

  updateSummary();                                               // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
}

function updateSummary() {
  const totalQty    = cart.reduce((sum, i) => sum + i.qty, 0);   // T·ªïng s·ªë l∆∞·ª£ng
  let total         = cart.reduce((sum, i) => sum + i.qty * i.price, 0); // T·ªïng ti·ªÅn
  const voucherInfo = document.getElementById('voucherInfo');
  const totalQtyEl  = document.getElementById('totalQty');
  const totalPriceEl= document.getElementById('totalPrice');

  if (selectedVoucher) {
    total *= (1 - selectedVoucher.discount);                     // Gi·∫£m gi√° n·∫øu c√≥
    voucherInfo.textContent = `Voucher: ${selectedVoucher.code} (-${(selectedVoucher.discount*100).toFixed(0)}%)`;
    voucherInfo.classList.remove('hidden');                      // Hi·ªán ph·∫ßn th√¥ng tin m√£
  }

  totalQtyEl.textContent   = totalQty;                           // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
  totalPriceEl.textContent = total.toFixed(2);                   // C·∫≠p nh·∫≠t gi√°
}

function renderVouchers() {                                      // Hi·ªán danh s√°ch m√£ trong modal
  const voucherListEl = document.getElementById('voucherList');
  voucherListEl.innerHTML = '';
  vouchers.forEach((v, idx) => {
    const div = document.createElement('div');
    div.className = 'voucher-item';
    div.innerHTML = `
      <input type="radio" name="voucher" id="vc${idx}" value="${idx}">
      <label for="vc${idx}">${v.code} - ${(v.discount*100).toFixed(0)}% off</label>
    `;
    voucherListEl.appendChild(div);
  });
}

